#!/bin/bash 

#set to "yes" to make profiles global.
#if using global profiles, then setting a profile in one terminal will effect all terminals
#otherwise, it will be kept in an env variable
DA_USE_GLOBAL_PROFILE="no"
DA_CURRENT_PROFILE="default"
DA_CD="pushd"

mkdir -p $HOME/.da
function da(){
	profile="$(da_current_profile)"
	conf="$HOME/.da/$profile.conf"
	touch $conf
	cmd="$1"
	case "$cmd" in
		'help')
			da_help
			;;
		'use')
			da_use_profile "$2"
			;;
		'using')
			echo "using '$profile' profile"
			;;
		'delprof')
			da_delete_profile "$2"
			;;
		'lsprof')
			da_list_profiles
			;;
		'del'|'kill')
			da_remove_alias "$2"
			;;
		'ls'|'list')
			da_list_aliases "$2"
			;;
		''|'-')
			$DA_CD $cmd
			;;
		*)
			da_switch_to "$cmd" "$2"
	esac
}

function da_help(){
cat <<EOF
da works similar to cd, but allows directories to be aliased
By default, da will use 'pushd' instead of 'cd', allowing the user to popd at any time

da
	cd to HOME
da -
	switch to the previous working directory
da some/existing/directory [alias]
	cd to the specified directory and save it as [alias] (if specified)
	if no alias is given, simply switch to the directory
da [alias]
	switch to directory [alias] points to
da del [alias]
	remove the alias [alias]
da ls [pattern]
	list all aliases matching [pattern]

da use [profile]
	use the aliases defined for [profile]. if no profile given, use default
da using
	say what profile is currently in use
da delprof [profile]
	delete profile [profile]
da lsprof
	list all existing profiles

da help
	display this help screen
EOF
}

function da_current_profile(){
	if [ "$DA_USE_GLOBAL_PROFILE" == "yes" ]; then
		profile=$(cat "$HOME/.da/current_profile")
	else
		profile="$DA_CURRENT_PROFILE"
	fi
	echo $profile
}

function da_use_profile(){
	prof="$1"
	if [ "$prof" == "" ]; then prof="default"; fi
	if [ "$DA_USE_GLOBAL_PROFILE" == "yes" ]; then
		echo "$prof" > "$HOME/.da/current_profile"
	else
		export DA_CURRENT_PROFILE="$prof"
	fi
	echo "switched to $(da_current_profile)"
}

function da_delete_profile(){
	prof="$1"
	proffile="$HOME/.da/$prof.conf"
	if [ "$prof" == "default" ]; then
		echo "Erorr: cannot delete the default profile"
	elif [ -f "$proffile" ];
		rm "$HOME/.da/$prof.conf"
		echo "removed $prof profile"
		if [ "$(da_current_profile)" == "$prof" ]; then
			da_use_profile "default"
		fi
	else
		echo "Error: $prof profile does not exist"
	fi
}

function da_list_profiles(){
	for prof in $(ls "$HOME/.da/" | egrep '\.conf$'); do basename $prof .conf; done
	#ls "$HOME/.da/" | egrep '\.conf$' | sed "s/^$HOME//" | sed 's/\.conf$//'
}

function da_switch_to(){
	a="$1"
	if [ -d "$a" ]; then
		dir="$a"
		a="$2"
		if [ "$a" != "" ]; then
			da_save_new "$a" "$dir"
		fi
	else
		dir="$(egrep "^$a:" "$conf" | head -n 1 | cut -d: -f2)"
		if [ "$dir" == "" ]; then
			echo "no directory with alias $a"
			da_save_new "$a"
		fi
	fi
	if [ "$dir" != "" ] && [ -d "$dir" ]; then
		$DA_CD $dir
	elif [ "$dir" != "" ]; then
		echo "Error: $dir doesn't exist"
		#TODO: prompt to delete broken alias
	fi
}

function da_remove_alias(){
	egrep -v "^$1:" "$conf" > "$conf.tmp"
	mv "$conf.tmp" "$conf"
}

function da_save_new(){
	a="$1"
	dir="$2"
	if [ "$dir" == "" ]; then
		read -p "save $a as an alias for $(pwd)?" save
		shopt -s nocasematch
		case "$save" in
			''|'n'|'no') dir="" ;;
			'y'|'yes'|'eys') dir="$(pwd)" ;;
			*) dir="$save"
		esac
		shopt -u nocasematch
	fi
	dir="$(relative_to_absolute "$dir")"
	if [ "$dir" != "" ] && [ -d "$dir" ]; then
		echo "$a:$dir" >> $conf
	fi
}

function da_list_aliases(){
	cat $conf | egrep "^.*$1.*:" | sed 's/:/: /'
}

function relative_to_absolute(){
	dir="$1"
	if [ $(echo "$dir" | egrep '^/') ]; then
		echo "$dir"
	else
		echo "$(pwd)/$dir"
	fi
}

