#!/bin/bash 

function da(){
	mkdir -p $HOME/.da
	conf="$HOME/.da/default.conf"
	touch $conf
	cmd="$1"
	case "$cmd" in
		'help')
			da_help
			;;
		'use')
			echo "multiple profiles is not implemented yet"
			;;
		'del'|'kill')
			da_remove_alias "$2"
			;;
		'ls'|'list')
			da_list_aliases "$2"
			;;
		''|'-')
			cd $cmd
			;;
		*)
			da_switch_to "$cmd" "$2"
	esac
}

function da_help(){
cat <<EOF
da works similar to cd, but allows directories to be aliased

da
	cd to HOME
da some/existing/directory
	cd to the specified directory
da -
	switch to the previous working directory

da [alias]
	switch to directory [alias] points to
da use [profile]
	use the aliases defined for [profile] (not implemented yet)
da del [alias]
	remove the alias [alias]
da ls [pattern]
	list all aliases matching [pattern]
EOF
}


function da_switch_to(){
	a="$1"
	if [ -d "$a" ]; then
		dir="$a"
		a="$2"
		if [ "$a" != "" ]; then
			da_save_new "$a" "$dir"
		fi
		cd $dir
	else
		dir="$(egrep "^$a:" "$conf" | head -n 1 | cut -d: -f2)"
		if [ "$dir" == "" ]; then
			echo "no directory with alias $a"
			da_save_new "$a"
		fi
		if [ "$dir" != "" ] && [ -d "$dir" ]; then
			cd $dir
		elif [ "$dir" != "" ]; then
			echo "Error: $dir doesn't exist"
			#TODO: prompt to delete broken alias
		fi
	fi
}

function da_remove_alias(){
	egrep -v "^$1:" "$conf" > "$conf.tmp"
	mv "$conf.tmp" "$conf"
}

function da_save_new(){
	a="$1"
	dir="$2"
	if [ "$dir" == "" ]; then
		read -p "save $a as an alias for $(pwd)?" save
		shopt -s nocasematch
		case "$save" in
			''|'n'|'no') dir="" ;;
			'y'|'yes'|'eys') dir="$(pwd)" ;;
			*) dir="$save"
		esac
		shopt -u nocasematch
	fi
	dir="$(relative_to_absolute "$dir")"
	if [ "$dir" != "" ] && [ -d "$dir" ]; then
		echo "$a:$dir" >> $conf
	fi
}

function da_list_aliases(){
	cat $conf | egrep "^.*$1.*:" | sed 's/:/: /'
}

function relative_to_absolute(){
	dir="$1"
	if [ $(echo "$dir" | egrep '^/') ]; then
		echo "$dir"
	else
		echo "$(pwd)/$dir"
	fi
}

